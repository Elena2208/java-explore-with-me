drop table if exists USERS, Location, Category, EVENTS, Compilation, Compilations_Events, Requests;

create table if not exists Users (
    id                  BIGINT generated by default as identity NOT NULL,
    name                VARCHAR(255) NOT NULL,
    email               VARCHAR(50)  UNIQUE NOT NULL,
    constraint USERS_PK primary key (id)
);

create table if not exists Location (
    id                  BIGINT generated by default as identity NOT NULL,
    lat          FLOAT NOT NULL,
    lon          FLOAT NOT NULL ,
    constraint Location_PK primary key (id)
);

create table if not exists Category (
    id                  BIGINT generated by default as identity NOT NULL,
    name                VARCHAR(255) NOT NULL,
    constraint Category_PK primary key (id)
);

create table if not exists Events (
    id                  BIGINT generated by default as identity NOT NULL,
    annotation          VARCHAR(2000) NOT NULL,
    category_id         BIGINT NOT NULL,
    confirmed_requests  BIGINT NOT NULL,
    created_on          TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    description         VARCHAR(7000) NOT NULL ,
    event_date          TIMESTAMP WITHOUT TIME ZONENOT NULL ,
    initiator_id        BIGINT NOT NULL,
    location_id         BIGINT NOT NULL,
    paid                BOOLEAN NOT NULL,
    participant_limit   BIGINT NOT NULL,
    published_on        TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    request_moderation  BOOLEAN,
    state               VARCHAR(15) NOT NULL,
    title               VARCHAR(120) NOT NULL,
    views               BIGINT NOT NULL,
    constraint EVENTS_PK primary key (id),
    constraint EVENTS_Category_category_id_FK foreign key (category_id) references Category(id) ON DELETE CASCADE,
    constraint EVENTS_USERS_initiator_id_FK foreign key (initiator_id) references USERS(id) ON DELETE CASCADE,
    constraint EVENTS_Location_location_id_FK foreign key (location_id) references Location(id) ON DELETE CASCADE
);

create table if not exists Compilation (
    id                  BIGINT generated by default as identity NOT NULL,
    pinned              BOOLEAN,
    title               VARCHAR(50) NOT NULL,
    constraint Compilation_PK primary key (id)
);

create table if not exists Compilations_Events (
    event_id           BIGINT NOT NULL,
    compilation_id      BIGINT NOT NULL,
    constraint Compilations_Events_EVENTS_event_id_FK foreign key (event_id) references EVENTS(id) ON DELETE CASCADE,
    constraint Compilations_Events_Compilation_events_id_FK foreign key (compilation_id) references Compilation(id) ON DELETE CASCADE
);

create table if not exists Requests (
    id                  BIGINT generated by default as identity NOT NULL,
    events_id           BIGINT NOT NULL,
    created             TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    requester_id        BIGINT NOT NULL,
    status              VARCHAR(20) NOT NULL,
    constraint Requests_PK primary key (id),
    constraint Requests_EVENTS_events_id_FK foreign key (events_id) references EVENTS(id) ON DELETE CASCADE,
    constraint Requests_USERS_requester_id_FK foreign key (requester_id) references USERS(id) ON DELETE CASCADE
);

CREATE UNIQUE INDEX users_id_idx ON USERS (id);
CREATE INDEX users_email_idx ON USERS(email);
CREATE UNIQUE INDEX Location_id_idx ON Location (id);
CREATE UNIQUE INDEX Category_id_idx ON Category (id);
CREATE UNIQUE INDEX Category_name_idx ON Category (name);
CREATE UNIQUE INDEX EVENTS_id_idx ON EVENTS (id);
CREATE INDEX EVENTS_event_date_idx ON EVENTS (event_date);
CREATE UNIQUE INDEX Compilation_id_idx ON Compilation (id);
CREATE INDEX Compilation_title_idx ON Compilation (title);
CREATE UNIQUE INDEX Requests_id_idx ON Requests (id);